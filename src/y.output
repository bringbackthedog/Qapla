Terminals unused in grammar

   REAL
   MOD
   WHILE
   '/'
   '^'


State 15 conflicts: 10 shift/reduce
State 20 conflicts: 1 shift/reduce
State 27 conflicts: 2 shift/reduce
State 38 conflicts: 2 shift/reduce, 4 reduce/reduce
State 64 conflicts: 1 shift/reduce
State 73 conflicts: 4 shift/reduce
State 74 conflicts: 4 shift/reduce
State 75 conflicts: 3 shift/reduce
State 76 conflicts: 4 shift/reduce
State 77 conflicts: 2 shift/reduce, 4 reduce/reduce
State 78 conflicts: 2 shift/reduce, 4 reduce/reduce


Grammar

    0 $accept: script $end

    1 script: threads

    2 threads: thread
    3        | threads thread

    4 thread: evaluations
    5       | declarations

    6 evaluations: evaluation
    7            | evaluations evaluation

    8 evaluation: statement

    9 funbody: statements retstmt
   10        | retstmt

   11 statements: statement
   12           | statements statement

   13 statement: assignexpr ';'
   14          | selection
   15          | expression ';'

   16 selection: ifcomponent
   17          | ifcomponent elseifcomponents
   18          | ifcomponent elseifcomponents elsecomponent
   19          | ifcomponent elsecomponent

   20 ifcomponent: IF '(' boolexpr ')' '{' statements '}'

   21 elseifcomponents: elseifcomponent
   22                 | elseifcomponents elseifcomponent

   23 elseifcomponent: ELSEIF '(' boolexpr ')' '{' statements '}'

   24 elsecomponent: ELSE '{' statements '}'

   25 declarations: fundecl
   26             | declarations fundecl

   27 fundecl: FUNC IDENTIFIER '(' ')' '{' funbody '}'
   28        | FUNC IDENTIFIER '(' paramdecl_list ')' '{' funbody '}'

   29 paramdecl_list: paramdecl
   30               | paramdecl_list ':' paramdecl

   31 paramdecl: IDENTIFIER
   32          | INTEGER

   33 expression: vardecl
   34           | funcall
   35           | IDENTIFIER
   36           | expression '+' expression
   37           | intexpr
   38           | strexpr
   39           | ioexpr
   40           | boolexpr

   41 funcall: IDENTIFIER '(' ')'
   42        | IDENTIFIER '(' paramassign_list ')'

   43 paramassign_list: paramassign
   44                 | paramassign_list ':' paramassign

   45 paramassign: expression

   46 retstmt: RETURN expression ';'

   47 vardecl: VAR IDENTIFIER

   48 assignexpr: IDENTIFIER '=' expression

   49 ioexpr: PRINT '(' expression ')'
   50       | PRINT '(' IDENTIFIER ')'

   51 boolexpr: '(' boolexpr ')'
   52         | boolexpr AND boolexpr
   53         | boolexpr OR boolexpr
   54         | NOT boolexpr
   55         | expression '<' expression
   56         | expression EVAL expression
   57         | expression NEQ expression
   58         | BOOLEAN

   59 strexpr: STRING

   60 intexpr: INTEGER
   61        | '-' intexpr
   62        | intexpr '*' intexpr


Terminals, with rules where they appear

$end (0) 0
'(' (40) 20 23 27 28 41 42 49 50 51
')' (41) 20 23 27 28 41 42 49 50 51
'*' (42) 62
'+' (43) 36
'-' (45) 61
'/' (47)
':' (58) 30 44
';' (59) 13 15 46
'<' (60) 55
'=' (61) 48
'^' (94)
'{' (123) 20 23 24 27 28
'}' (125) 20 23 24 27 28
error (256)
INTEGER (258) 32 60
REAL (259)
IDENTIFIER (260) 27 28 31 35 41 42 47 48 50
STRING (261) 59
BOOLEAN (262) 58
PRINT (263) 49 50
VAR (264) 47
MOD (265)
FUNC (266) 27 28
EVAL (267) 56
RETURN (268) 46
IF (269) 20
ELSEIF (270) 23
ELSE (271) 24
WHILE (272)
AND (273) 52
OR (274) 53
NOT (275) 54
NEQ (276) 57


Nonterminals, with rules where they appear

$accept (35)
    on left: 0
script (36)
    on left: 1, on right: 0
threads (37)
    on left: 2 3, on right: 1 3
thread (38)
    on left: 4 5, on right: 2 3
evaluations (39)
    on left: 6 7, on right: 4 7
evaluation (40)
    on left: 8, on right: 6 7
funbody (41)
    on left: 9 10, on right: 27 28
statements (42)
    on left: 11 12, on right: 9 12 20 23 24
statement (43)
    on left: 13 14 15, on right: 8 11 12
selection (44)
    on left: 16 17 18 19, on right: 14
ifcomponent (45)
    on left: 20, on right: 16 17 18 19
elseifcomponents (46)
    on left: 21 22, on right: 17 18 22
elseifcomponent (47)
    on left: 23, on right: 21 22
elsecomponent (48)
    on left: 24, on right: 18 19
declarations (49)
    on left: 25 26, on right: 5 26
fundecl (50)
    on left: 27 28, on right: 25 26
paramdecl_list (51)
    on left: 29 30, on right: 28 30
paramdecl (52)
    on left: 31 32, on right: 29 30
expression (53)
    on left: 33 34 35 36 37 38 39 40, on right: 15 36 45 46 48 49 55
    56 57
funcall (54)
    on left: 41 42, on right: 34
paramassign_list (55)
    on left: 43 44, on right: 42 44
paramassign (56)
    on left: 45, on right: 43 44
retstmt (57)
    on left: 46, on right: 9 10
vardecl (58)
    on left: 47, on right: 33
assignexpr (59)
    on left: 48, on right: 13
ioexpr (60)
    on left: 49 50, on right: 39
boolexpr (61)
    on left: 51 52 53 54 55 56 57 58, on right: 20 23 40 51 52 53 54
strexpr (62)
    on left: 59, on right: 38
intexpr (63)
    on left: 60 61 62, on right: 37 61 62


State 0

    0 $accept: . script $end

    INTEGER     shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    STRING      shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    PRINT       shift, and go to state 5
    VAR         shift, and go to state 6
    FUNC        shift, and go to state 7
    IF          shift, and go to state 8
    NOT         shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    script        go to state 12
    threads       go to state 13
    thread        go to state 14
    evaluations   go to state 15
    evaluation    go to state 16
    statement     go to state 17
    selection     go to state 18
    ifcomponent   go to state 19
    declarations  go to state 20
    fundecl       go to state 21
    expression    go to state 22
    funcall       go to state 23
    vardecl       go to state 24
    assignexpr    go to state 25
    ioexpr        go to state 26
    boolexpr      go to state 27
    strexpr       go to state 28
    intexpr       go to state 29


State 1

   60 intexpr: INTEGER .

    $default  reduce using rule 60 (intexpr)


State 2

   35 expression: IDENTIFIER .
   41 funcall: IDENTIFIER . '(' ')'
   42        | IDENTIFIER . '(' paramassign_list ')'
   48 assignexpr: IDENTIFIER . '=' expression

    '='  shift, and go to state 30
    '('  shift, and go to state 31

    $default  reduce using rule 35 (expression)


State 3

   59 strexpr: STRING .

    $default  reduce using rule 59 (strexpr)


State 4

   58 boolexpr: BOOLEAN .

    $default  reduce using rule 58 (boolexpr)


State 5

   49 ioexpr: PRINT . '(' expression ')'
   50       | PRINT . '(' IDENTIFIER ')'

    '('  shift, and go to state 32


State 6

   47 vardecl: VAR . IDENTIFIER

    IDENTIFIER  shift, and go to state 33


State 7

   27 fundecl: FUNC . IDENTIFIER '(' ')' '{' funbody '}'
   28        | FUNC . IDENTIFIER '(' paramdecl_list ')' '{' funbody '}'

    IDENTIFIER  shift, and go to state 34


State 8

   20 ifcomponent: IF . '(' boolexpr ')' '{' statements '}'

    '('  shift, and go to state 35


State 9

   54 boolexpr: NOT . boolexpr

    INTEGER     shift, and go to state 1
    IDENTIFIER  shift, and go to state 36
    STRING      shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    PRINT       shift, and go to state 5
    VAR         shift, and go to state 6
    NOT         shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expression  go to state 37
    funcall     go to state 23
    vardecl     go to state 24
    ioexpr      go to state 26
    boolexpr    go to state 38
    strexpr     go to state 28
    intexpr     go to state 29


State 10

   61 intexpr: '-' . intexpr

    INTEGER  shift, and go to state 1
    '-'      shift, and go to state 10

    intexpr  go to state 39


State 11

   51 boolexpr: '(' . boolexpr ')'

    INTEGER     shift, and go to state 1
    IDENTIFIER  shift, and go to state 36
    STRING      shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    PRINT       shift, and go to state 5
    VAR         shift, and go to state 6
    NOT         shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expression  go to state 37
    funcall     go to state 23
    vardecl     go to state 24
    ioexpr      go to state 26
    boolexpr    go to state 40
    strexpr     go to state 28
    intexpr     go to state 29


State 12

    0 $accept: script . $end

    $end  shift, and go to state 41


State 13

    1 script: threads .
    3 threads: threads . thread

    INTEGER     shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    STRING      shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    PRINT       shift, and go to state 5
    VAR         shift, and go to state 6
    FUNC        shift, and go to state 7
    IF          shift, and go to state 8
    NOT         shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    $default  reduce using rule 1 (script)

    thread        go to state 42
    evaluations   go to state 15
    evaluation    go to state 16
    statement     go to state 17
    selection     go to state 18
    ifcomponent   go to state 19
    declarations  go to state 20
    fundecl       go to state 21
    expression    go to state 22
    funcall       go to state 23
    vardecl       go to state 24
    assignexpr    go to state 25
    ioexpr        go to state 26
    boolexpr      go to state 27
    strexpr       go to state 28
    intexpr       go to state 29


State 14

    2 threads: thread .

    $default  reduce using rule 2 (threads)


State 15

    4 thread: evaluations .
    7 evaluations: evaluations . evaluation

    INTEGER     shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    STRING      shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    PRINT       shift, and go to state 5
    VAR         shift, and go to state 6
    IF          shift, and go to state 8
    NOT         shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    INTEGER     [reduce using rule 4 (thread)]
    IDENTIFIER  [reduce using rule 4 (thread)]
    STRING      [reduce using rule 4 (thread)]
    BOOLEAN     [reduce using rule 4 (thread)]
    PRINT       [reduce using rule 4 (thread)]
    VAR         [reduce using rule 4 (thread)]
    IF          [reduce using rule 4 (thread)]
    NOT         [reduce using rule 4 (thread)]
    '-'         [reduce using rule 4 (thread)]
    '('         [reduce using rule 4 (thread)]
    $default    reduce using rule 4 (thread)

    evaluation   go to state 43
    statement    go to state 17
    selection    go to state 18
    ifcomponent  go to state 19
    expression   go to state 22
    funcall      go to state 23
    vardecl      go to state 24
    assignexpr   go to state 25
    ioexpr       go to state 26
    boolexpr     go to state 27
    strexpr      go to state 28
    intexpr      go to state 29


State 16

    6 evaluations: evaluation .

    $default  reduce using rule 6 (evaluations)


State 17

    8 evaluation: statement .

    $default  reduce using rule 8 (evaluation)


State 18

   14 statement: selection .

    $default  reduce using rule 14 (statement)


State 19

   16 selection: ifcomponent .
   17          | ifcomponent . elseifcomponents
   18          | ifcomponent . elseifcomponents elsecomponent
   19          | ifcomponent . elsecomponent

    ELSEIF  shift, and go to state 44
    ELSE    shift, and go to state 45

    $default  reduce using rule 16 (selection)

    elseifcomponents  go to state 46
    elseifcomponent   go to state 47
    elsecomponent     go to state 48


State 20

    5 thread: declarations .
   26 declarations: declarations . fundecl

    FUNC  shift, and go to state 7

    FUNC      [reduce using rule 5 (thread)]
    $default  reduce using rule 5 (thread)

    fundecl  go to state 49


State 21

   25 declarations: fundecl .

    $default  reduce using rule 25 (declarations)


State 22

   15 statement: expression . ';'
   36 expression: expression . '+' expression
   55 boolexpr: expression . '<' expression
   56         | expression . EVAL expression
   57         | expression . NEQ expression

    EVAL  shift, and go to state 50
    NEQ   shift, and go to state 51
    '+'   shift, and go to state 52
    ';'   shift, and go to state 53
    '<'   shift, and go to state 54


State 23

   34 expression: funcall .

    $default  reduce using rule 34 (expression)


State 24

   33 expression: vardecl .

    $default  reduce using rule 33 (expression)


State 25

   13 statement: assignexpr . ';'

    ';'  shift, and go to state 55


State 26

   39 expression: ioexpr .

    $default  reduce using rule 39 (expression)


State 27

   40 expression: boolexpr .
   52 boolexpr: boolexpr . AND boolexpr
   53         | boolexpr . OR boolexpr

    AND  shift, and go to state 56
    OR   shift, and go to state 57

    AND       [reduce using rule 40 (expression)]
    OR        [reduce using rule 40 (expression)]
    $default  reduce using rule 40 (expression)


State 28

   38 expression: strexpr .

    $default  reduce using rule 38 (expression)


State 29

   37 expression: intexpr .
   62 intexpr: intexpr . '*' intexpr

    '*'  shift, and go to state 58

    $default  reduce using rule 37 (expression)


State 30

   48 assignexpr: IDENTIFIER '=' . expression

    INTEGER     shift, and go to state 1
    IDENTIFIER  shift, and go to state 36
    STRING      shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    PRINT       shift, and go to state 5
    VAR         shift, and go to state 6
    NOT         shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expression  go to state 59
    funcall     go to state 23
    vardecl     go to state 24
    ioexpr      go to state 26
    boolexpr    go to state 27
    strexpr     go to state 28
    intexpr     go to state 29


State 31

   41 funcall: IDENTIFIER '(' . ')'
   42        | IDENTIFIER '(' . paramassign_list ')'

    INTEGER     shift, and go to state 1
    IDENTIFIER  shift, and go to state 36
    STRING      shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    PRINT       shift, and go to state 5
    VAR         shift, and go to state 6
    NOT         shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11
    ')'         shift, and go to state 60

    expression        go to state 61
    funcall           go to state 23
    paramassign_list  go to state 62
    paramassign       go to state 63
    vardecl           go to state 24
    ioexpr            go to state 26
    boolexpr          go to state 27
    strexpr           go to state 28
    intexpr           go to state 29


State 32

   49 ioexpr: PRINT '(' . expression ')'
   50       | PRINT '(' . IDENTIFIER ')'

    INTEGER     shift, and go to state 1
    IDENTIFIER  shift, and go to state 64
    STRING      shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    PRINT       shift, and go to state 5
    VAR         shift, and go to state 6
    NOT         shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expression  go to state 65
    funcall     go to state 23
    vardecl     go to state 24
    ioexpr      go to state 26
    boolexpr    go to state 27
    strexpr     go to state 28
    intexpr     go to state 29


State 33

   47 vardecl: VAR IDENTIFIER .

    $default  reduce using rule 47 (vardecl)


State 34

   27 fundecl: FUNC IDENTIFIER . '(' ')' '{' funbody '}'
   28        | FUNC IDENTIFIER . '(' paramdecl_list ')' '{' funbody '}'

    '('  shift, and go to state 66


State 35

   20 ifcomponent: IF '(' . boolexpr ')' '{' statements '}'

    INTEGER     shift, and go to state 1
    IDENTIFIER  shift, and go to state 36
    STRING      shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    PRINT       shift, and go to state 5
    VAR         shift, and go to state 6
    NOT         shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expression  go to state 37
    funcall     go to state 23
    vardecl     go to state 24
    ioexpr      go to state 26
    boolexpr    go to state 67
    strexpr     go to state 28
    intexpr     go to state 29


State 36

   35 expression: IDENTIFIER .
   41 funcall: IDENTIFIER . '(' ')'
   42        | IDENTIFIER . '(' paramassign_list ')'

    '('  shift, and go to state 31

    $default  reduce using rule 35 (expression)


State 37

   36 expression: expression . '+' expression
   55 boolexpr: expression . '<' expression
   56         | expression . EVAL expression
   57         | expression . NEQ expression

    EVAL  shift, and go to state 50
    NEQ   shift, and go to state 51
    '+'   shift, and go to state 52
    '<'   shift, and go to state 54


State 38

   40 expression: boolexpr .
   52 boolexpr: boolexpr . AND boolexpr
   53         | boolexpr . OR boolexpr
   54         | NOT boolexpr .

    AND  shift, and go to state 56
    OR   shift, and go to state 57

    EVAL      reduce using rule 40 (expression)
    EVAL      [reduce using rule 54 (boolexpr)]
    AND       [reduce using rule 54 (boolexpr)]
    OR        [reduce using rule 54 (boolexpr)]
    NEQ       reduce using rule 40 (expression)
    NEQ       [reduce using rule 54 (boolexpr)]
    '+'       reduce using rule 40 (expression)
    '+'       [reduce using rule 54 (boolexpr)]
    ';'       reduce using rule 54 (boolexpr)
    ')'       reduce using rule 54 (boolexpr)
    ':'       reduce using rule 54 (boolexpr)
    '<'       reduce using rule 40 (expression)
    '<'       [reduce using rule 54 (boolexpr)]
    $default  reduce using rule 40 (expression)


State 39

   61 intexpr: '-' intexpr .
   62        | intexpr . '*' intexpr

    $default  reduce using rule 61 (intexpr)


State 40

   40 expression: boolexpr .
   51 boolexpr: '(' boolexpr . ')'
   52         | boolexpr . AND boolexpr
   53         | boolexpr . OR boolexpr

    AND  shift, and go to state 56
    OR   shift, and go to state 57
    ')'  shift, and go to state 68

    $default  reduce using rule 40 (expression)


State 41

    0 $accept: script $end .

    $default  accept


State 42

    3 threads: threads thread .

    $default  reduce using rule 3 (threads)


State 43

    7 evaluations: evaluations evaluation .

    $default  reduce using rule 7 (evaluations)


State 44

   23 elseifcomponent: ELSEIF . '(' boolexpr ')' '{' statements '}'

    '('  shift, and go to state 69


State 45

   24 elsecomponent: ELSE . '{' statements '}'

    '{'  shift, and go to state 70


State 46

   17 selection: ifcomponent elseifcomponents .
   18          | ifcomponent elseifcomponents . elsecomponent
   22 elseifcomponents: elseifcomponents . elseifcomponent

    ELSEIF  shift, and go to state 44
    ELSE    shift, and go to state 45

    $default  reduce using rule 17 (selection)

    elseifcomponent  go to state 71
    elsecomponent    go to state 72


State 47

   21 elseifcomponents: elseifcomponent .

    $default  reduce using rule 21 (elseifcomponents)


State 48

   19 selection: ifcomponent elsecomponent .

    $default  reduce using rule 19 (selection)


State 49

   26 declarations: declarations fundecl .

    $default  reduce using rule 26 (declarations)


State 50

   56 boolexpr: expression EVAL . expression

    INTEGER     shift, and go to state 1
    IDENTIFIER  shift, and go to state 36
    STRING      shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    PRINT       shift, and go to state 5
    VAR         shift, and go to state 6
    NOT         shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expression  go to state 73
    funcall     go to state 23
    vardecl     go to state 24
    ioexpr      go to state 26
    boolexpr    go to state 27
    strexpr     go to state 28
    intexpr     go to state 29


State 51

   57 boolexpr: expression NEQ . expression

    INTEGER     shift, and go to state 1
    IDENTIFIER  shift, and go to state 36
    STRING      shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    PRINT       shift, and go to state 5
    VAR         shift, and go to state 6
    NOT         shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expression  go to state 74
    funcall     go to state 23
    vardecl     go to state 24
    ioexpr      go to state 26
    boolexpr    go to state 27
    strexpr     go to state 28
    intexpr     go to state 29


State 52

   36 expression: expression '+' . expression

    INTEGER     shift, and go to state 1
    IDENTIFIER  shift, and go to state 36
    STRING      shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    PRINT       shift, and go to state 5
    VAR         shift, and go to state 6
    NOT         shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expression  go to state 75
    funcall     go to state 23
    vardecl     go to state 24
    ioexpr      go to state 26
    boolexpr    go to state 27
    strexpr     go to state 28
    intexpr     go to state 29


State 53

   15 statement: expression ';' .

    $default  reduce using rule 15 (statement)


State 54

   55 boolexpr: expression '<' . expression

    INTEGER     shift, and go to state 1
    IDENTIFIER  shift, and go to state 36
    STRING      shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    PRINT       shift, and go to state 5
    VAR         shift, and go to state 6
    NOT         shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expression  go to state 76
    funcall     go to state 23
    vardecl     go to state 24
    ioexpr      go to state 26
    boolexpr    go to state 27
    strexpr     go to state 28
    intexpr     go to state 29


State 55

   13 statement: assignexpr ';' .

    $default  reduce using rule 13 (statement)


State 56

   52 boolexpr: boolexpr AND . boolexpr

    INTEGER     shift, and go to state 1
    IDENTIFIER  shift, and go to state 36
    STRING      shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    PRINT       shift, and go to state 5
    VAR         shift, and go to state 6
    NOT         shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expression  go to state 37
    funcall     go to state 23
    vardecl     go to state 24
    ioexpr      go to state 26
    boolexpr    go to state 77
    strexpr     go to state 28
    intexpr     go to state 29


State 57

   53 boolexpr: boolexpr OR . boolexpr

    INTEGER     shift, and go to state 1
    IDENTIFIER  shift, and go to state 36
    STRING      shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    PRINT       shift, and go to state 5
    VAR         shift, and go to state 6
    NOT         shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expression  go to state 37
    funcall     go to state 23
    vardecl     go to state 24
    ioexpr      go to state 26
    boolexpr    go to state 78
    strexpr     go to state 28
    intexpr     go to state 29


State 58

   62 intexpr: intexpr '*' . intexpr

    INTEGER  shift, and go to state 1
    '-'      shift, and go to state 10

    intexpr  go to state 79


State 59

   36 expression: expression . '+' expression
   48 assignexpr: IDENTIFIER '=' expression .
   55 boolexpr: expression . '<' expression
   56         | expression . EVAL expression
   57         | expression . NEQ expression

    EVAL  shift, and go to state 50
    NEQ   shift, and go to state 51
    '+'   shift, and go to state 52
    '<'   shift, and go to state 54

    $default  reduce using rule 48 (assignexpr)


State 60

   41 funcall: IDENTIFIER '(' ')' .

    $default  reduce using rule 41 (funcall)


State 61

   36 expression: expression . '+' expression
   45 paramassign: expression .
   55 boolexpr: expression . '<' expression
   56         | expression . EVAL expression
   57         | expression . NEQ expression

    EVAL  shift, and go to state 50
    NEQ   shift, and go to state 51
    '+'   shift, and go to state 52
    '<'   shift, and go to state 54

    $default  reduce using rule 45 (paramassign)


State 62

   42 funcall: IDENTIFIER '(' paramassign_list . ')'
   44 paramassign_list: paramassign_list . ':' paramassign

    ')'  shift, and go to state 80
    ':'  shift, and go to state 81


State 63

   43 paramassign_list: paramassign .

    $default  reduce using rule 43 (paramassign_list)


State 64

   35 expression: IDENTIFIER .
   41 funcall: IDENTIFIER . '(' ')'
   42        | IDENTIFIER . '(' paramassign_list ')'
   50 ioexpr: PRINT '(' IDENTIFIER . ')'

    '('  shift, and go to state 31
    ')'  shift, and go to state 82

    ')'       [reduce using rule 35 (expression)]
    $default  reduce using rule 35 (expression)


State 65

   36 expression: expression . '+' expression
   49 ioexpr: PRINT '(' expression . ')'
   55 boolexpr: expression . '<' expression
   56         | expression . EVAL expression
   57         | expression . NEQ expression

    EVAL  shift, and go to state 50
    NEQ   shift, and go to state 51
    '+'   shift, and go to state 52
    ')'   shift, and go to state 83
    '<'   shift, and go to state 54


State 66

   27 fundecl: FUNC IDENTIFIER '(' . ')' '{' funbody '}'
   28        | FUNC IDENTIFIER '(' . paramdecl_list ')' '{' funbody '}'

    INTEGER     shift, and go to state 84
    IDENTIFIER  shift, and go to state 85
    ')'         shift, and go to state 86

    paramdecl_list  go to state 87
    paramdecl       go to state 88


State 67

   20 ifcomponent: IF '(' boolexpr . ')' '{' statements '}'
   40 expression: boolexpr .
   52 boolexpr: boolexpr . AND boolexpr
   53         | boolexpr . OR boolexpr

    AND  shift, and go to state 56
    OR   shift, and go to state 57
    ')'  shift, and go to state 89

    $default  reduce using rule 40 (expression)


State 68

   51 boolexpr: '(' boolexpr ')' .

    $default  reduce using rule 51 (boolexpr)


State 69

   23 elseifcomponent: ELSEIF '(' . boolexpr ')' '{' statements '}'

    INTEGER     shift, and go to state 1
    IDENTIFIER  shift, and go to state 36
    STRING      shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    PRINT       shift, and go to state 5
    VAR         shift, and go to state 6
    NOT         shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expression  go to state 37
    funcall     go to state 23
    vardecl     go to state 24
    ioexpr      go to state 26
    boolexpr    go to state 90
    strexpr     go to state 28
    intexpr     go to state 29


State 70

   24 elsecomponent: ELSE '{' . statements '}'

    INTEGER     shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    STRING      shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    PRINT       shift, and go to state 5
    VAR         shift, and go to state 6
    IF          shift, and go to state 8
    NOT         shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    statements   go to state 91
    statement    go to state 92
    selection    go to state 18
    ifcomponent  go to state 19
    expression   go to state 22
    funcall      go to state 23
    vardecl      go to state 24
    assignexpr   go to state 25
    ioexpr       go to state 26
    boolexpr     go to state 27
    strexpr      go to state 28
    intexpr      go to state 29


State 71

   22 elseifcomponents: elseifcomponents elseifcomponent .

    $default  reduce using rule 22 (elseifcomponents)


State 72

   18 selection: ifcomponent elseifcomponents elsecomponent .

    $default  reduce using rule 18 (selection)


State 73

   36 expression: expression . '+' expression
   55 boolexpr: expression . '<' expression
   56         | expression . EVAL expression
   56         | expression EVAL expression .
   57         | expression . NEQ expression

    EVAL  shift, and go to state 50
    NEQ   shift, and go to state 51
    '+'   shift, and go to state 52
    '<'   shift, and go to state 54

    EVAL      [reduce using rule 56 (boolexpr)]
    NEQ       [reduce using rule 56 (boolexpr)]
    '+'       [reduce using rule 56 (boolexpr)]
    '<'       [reduce using rule 56 (boolexpr)]
    $default  reduce using rule 56 (boolexpr)


State 74

   36 expression: expression . '+' expression
   55 boolexpr: expression . '<' expression
   56         | expression . EVAL expression
   57         | expression . NEQ expression
   57         | expression NEQ expression .

    EVAL  shift, and go to state 50
    NEQ   shift, and go to state 51
    '+'   shift, and go to state 52
    '<'   shift, and go to state 54

    EVAL      [reduce using rule 57 (boolexpr)]
    NEQ       [reduce using rule 57 (boolexpr)]
    '+'       [reduce using rule 57 (boolexpr)]
    '<'       [reduce using rule 57 (boolexpr)]
    $default  reduce using rule 57 (boolexpr)


State 75

   36 expression: expression . '+' expression
   36           | expression '+' expression .
   55 boolexpr: expression . '<' expression
   56         | expression . EVAL expression
   57         | expression . NEQ expression

    EVAL  shift, and go to state 50
    NEQ   shift, and go to state 51
    '<'   shift, and go to state 54

    EVAL      [reduce using rule 36 (expression)]
    NEQ       [reduce using rule 36 (expression)]
    '<'       [reduce using rule 36 (expression)]
    $default  reduce using rule 36 (expression)


State 76

   36 expression: expression . '+' expression
   55 boolexpr: expression . '<' expression
   55         | expression '<' expression .
   56         | expression . EVAL expression
   57         | expression . NEQ expression

    EVAL  shift, and go to state 50
    NEQ   shift, and go to state 51
    '+'   shift, and go to state 52
    '<'   shift, and go to state 54

    EVAL      [reduce using rule 55 (boolexpr)]
    NEQ       [reduce using rule 55 (boolexpr)]
    '+'       [reduce using rule 55 (boolexpr)]
    '<'       [reduce using rule 55 (boolexpr)]
    $default  reduce using rule 55 (boolexpr)


State 77

   40 expression: boolexpr .
   52 boolexpr: boolexpr . AND boolexpr
   52         | boolexpr AND boolexpr .
   53         | boolexpr . OR boolexpr

    AND  shift, and go to state 56
    OR   shift, and go to state 57

    EVAL      reduce using rule 40 (expression)
    EVAL      [reduce using rule 52 (boolexpr)]
    AND       [reduce using rule 52 (boolexpr)]
    OR        [reduce using rule 52 (boolexpr)]
    NEQ       reduce using rule 40 (expression)
    NEQ       [reduce using rule 52 (boolexpr)]
    '+'       reduce using rule 40 (expression)
    '+'       [reduce using rule 52 (boolexpr)]
    ';'       reduce using rule 52 (boolexpr)
    ')'       reduce using rule 52 (boolexpr)
    ':'       reduce using rule 52 (boolexpr)
    '<'       reduce using rule 40 (expression)
    '<'       [reduce using rule 52 (boolexpr)]
    $default  reduce using rule 40 (expression)


State 78

   40 expression: boolexpr .
   52 boolexpr: boolexpr . AND boolexpr
   53         | boolexpr . OR boolexpr
   53         | boolexpr OR boolexpr .

    AND  shift, and go to state 56
    OR   shift, and go to state 57

    EVAL      reduce using rule 40 (expression)
    EVAL      [reduce using rule 53 (boolexpr)]
    AND       [reduce using rule 53 (boolexpr)]
    OR        [reduce using rule 53 (boolexpr)]
    NEQ       reduce using rule 40 (expression)
    NEQ       [reduce using rule 53 (boolexpr)]
    '+'       reduce using rule 40 (expression)
    '+'       [reduce using rule 53 (boolexpr)]
    ';'       reduce using rule 53 (boolexpr)
    ')'       reduce using rule 53 (boolexpr)
    ':'       reduce using rule 53 (boolexpr)
    '<'       reduce using rule 40 (expression)
    '<'       [reduce using rule 53 (boolexpr)]
    $default  reduce using rule 40 (expression)


State 79

   62 intexpr: intexpr . '*' intexpr
   62        | intexpr '*' intexpr .

    $default  reduce using rule 62 (intexpr)


State 80

   42 funcall: IDENTIFIER '(' paramassign_list ')' .

    $default  reduce using rule 42 (funcall)


State 81

   44 paramassign_list: paramassign_list ':' . paramassign

    INTEGER     shift, and go to state 1
    IDENTIFIER  shift, and go to state 36
    STRING      shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    PRINT       shift, and go to state 5
    VAR         shift, and go to state 6
    NOT         shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expression   go to state 61
    funcall      go to state 23
    paramassign  go to state 93
    vardecl      go to state 24
    ioexpr       go to state 26
    boolexpr     go to state 27
    strexpr      go to state 28
    intexpr      go to state 29


State 82

   50 ioexpr: PRINT '(' IDENTIFIER ')' .

    $default  reduce using rule 50 (ioexpr)


State 83

   49 ioexpr: PRINT '(' expression ')' .

    $default  reduce using rule 49 (ioexpr)


State 84

   32 paramdecl: INTEGER .

    $default  reduce using rule 32 (paramdecl)


State 85

   31 paramdecl: IDENTIFIER .

    $default  reduce using rule 31 (paramdecl)


State 86

   27 fundecl: FUNC IDENTIFIER '(' ')' . '{' funbody '}'

    '{'  shift, and go to state 94


State 87

   28 fundecl: FUNC IDENTIFIER '(' paramdecl_list . ')' '{' funbody '}'
   30 paramdecl_list: paramdecl_list . ':' paramdecl

    ')'  shift, and go to state 95
    ':'  shift, and go to state 96


State 88

   29 paramdecl_list: paramdecl .

    $default  reduce using rule 29 (paramdecl_list)


State 89

   20 ifcomponent: IF '(' boolexpr ')' . '{' statements '}'

    '{'  shift, and go to state 97


State 90

   23 elseifcomponent: ELSEIF '(' boolexpr . ')' '{' statements '}'
   40 expression: boolexpr .
   52 boolexpr: boolexpr . AND boolexpr
   53         | boolexpr . OR boolexpr

    AND  shift, and go to state 56
    OR   shift, and go to state 57
    ')'  shift, and go to state 98

    $default  reduce using rule 40 (expression)


State 91

   12 statements: statements . statement
   24 elsecomponent: ELSE '{' statements . '}'

    INTEGER     shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    STRING      shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    PRINT       shift, and go to state 5
    VAR         shift, and go to state 6
    IF          shift, and go to state 8
    NOT         shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11
    '}'         shift, and go to state 99

    statement    go to state 100
    selection    go to state 18
    ifcomponent  go to state 19
    expression   go to state 22
    funcall      go to state 23
    vardecl      go to state 24
    assignexpr   go to state 25
    ioexpr       go to state 26
    boolexpr     go to state 27
    strexpr      go to state 28
    intexpr      go to state 29


State 92

   11 statements: statement .

    $default  reduce using rule 11 (statements)


State 93

   44 paramassign_list: paramassign_list ':' paramassign .

    $default  reduce using rule 44 (paramassign_list)


State 94

   27 fundecl: FUNC IDENTIFIER '(' ')' '{' . funbody '}'

    INTEGER     shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    STRING      shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    PRINT       shift, and go to state 5
    VAR         shift, and go to state 6
    RETURN      shift, and go to state 101
    IF          shift, and go to state 8
    NOT         shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    funbody      go to state 102
    statements   go to state 103
    statement    go to state 92
    selection    go to state 18
    ifcomponent  go to state 19
    expression   go to state 22
    funcall      go to state 23
    retstmt      go to state 104
    vardecl      go to state 24
    assignexpr   go to state 25
    ioexpr       go to state 26
    boolexpr     go to state 27
    strexpr      go to state 28
    intexpr      go to state 29


State 95

   28 fundecl: FUNC IDENTIFIER '(' paramdecl_list ')' . '{' funbody '}'

    '{'  shift, and go to state 105


State 96

   30 paramdecl_list: paramdecl_list ':' . paramdecl

    INTEGER     shift, and go to state 84
    IDENTIFIER  shift, and go to state 85

    paramdecl  go to state 106


State 97

   20 ifcomponent: IF '(' boolexpr ')' '{' . statements '}'

    INTEGER     shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    STRING      shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    PRINT       shift, and go to state 5
    VAR         shift, and go to state 6
    IF          shift, and go to state 8
    NOT         shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    statements   go to state 107
    statement    go to state 92
    selection    go to state 18
    ifcomponent  go to state 19
    expression   go to state 22
    funcall      go to state 23
    vardecl      go to state 24
    assignexpr   go to state 25
    ioexpr       go to state 26
    boolexpr     go to state 27
    strexpr      go to state 28
    intexpr      go to state 29


State 98

   23 elseifcomponent: ELSEIF '(' boolexpr ')' . '{' statements '}'

    '{'  shift, and go to state 108


State 99

   24 elsecomponent: ELSE '{' statements '}' .

    $default  reduce using rule 24 (elsecomponent)


State 100

   12 statements: statements statement .

    $default  reduce using rule 12 (statements)


State 101

   46 retstmt: RETURN . expression ';'

    INTEGER     shift, and go to state 1
    IDENTIFIER  shift, and go to state 36
    STRING      shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    PRINT       shift, and go to state 5
    VAR         shift, and go to state 6
    NOT         shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    expression  go to state 109
    funcall     go to state 23
    vardecl     go to state 24
    ioexpr      go to state 26
    boolexpr    go to state 27
    strexpr     go to state 28
    intexpr     go to state 29


State 102

   27 fundecl: FUNC IDENTIFIER '(' ')' '{' funbody . '}'

    '}'  shift, and go to state 110


State 103

    9 funbody: statements . retstmt
   12 statements: statements . statement

    INTEGER     shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    STRING      shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    PRINT       shift, and go to state 5
    VAR         shift, and go to state 6
    RETURN      shift, and go to state 101
    IF          shift, and go to state 8
    NOT         shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    statement    go to state 100
    selection    go to state 18
    ifcomponent  go to state 19
    expression   go to state 22
    funcall      go to state 23
    retstmt      go to state 111
    vardecl      go to state 24
    assignexpr   go to state 25
    ioexpr       go to state 26
    boolexpr     go to state 27
    strexpr      go to state 28
    intexpr      go to state 29


State 104

   10 funbody: retstmt .

    $default  reduce using rule 10 (funbody)


State 105

   28 fundecl: FUNC IDENTIFIER '(' paramdecl_list ')' '{' . funbody '}'

    INTEGER     shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    STRING      shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    PRINT       shift, and go to state 5
    VAR         shift, and go to state 6
    RETURN      shift, and go to state 101
    IF          shift, and go to state 8
    NOT         shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    funbody      go to state 112
    statements   go to state 103
    statement    go to state 92
    selection    go to state 18
    ifcomponent  go to state 19
    expression   go to state 22
    funcall      go to state 23
    retstmt      go to state 104
    vardecl      go to state 24
    assignexpr   go to state 25
    ioexpr       go to state 26
    boolexpr     go to state 27
    strexpr      go to state 28
    intexpr      go to state 29


State 106

   30 paramdecl_list: paramdecl_list ':' paramdecl .

    $default  reduce using rule 30 (paramdecl_list)


State 107

   12 statements: statements . statement
   20 ifcomponent: IF '(' boolexpr ')' '{' statements . '}'

    INTEGER     shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    STRING      shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    PRINT       shift, and go to state 5
    VAR         shift, and go to state 6
    IF          shift, and go to state 8
    NOT         shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11
    '}'         shift, and go to state 113

    statement    go to state 100
    selection    go to state 18
    ifcomponent  go to state 19
    expression   go to state 22
    funcall      go to state 23
    vardecl      go to state 24
    assignexpr   go to state 25
    ioexpr       go to state 26
    boolexpr     go to state 27
    strexpr      go to state 28
    intexpr      go to state 29


State 108

   23 elseifcomponent: ELSEIF '(' boolexpr ')' '{' . statements '}'

    INTEGER     shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    STRING      shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    PRINT       shift, and go to state 5
    VAR         shift, and go to state 6
    IF          shift, and go to state 8
    NOT         shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11

    statements   go to state 114
    statement    go to state 92
    selection    go to state 18
    ifcomponent  go to state 19
    expression   go to state 22
    funcall      go to state 23
    vardecl      go to state 24
    assignexpr   go to state 25
    ioexpr       go to state 26
    boolexpr     go to state 27
    strexpr      go to state 28
    intexpr      go to state 29


State 109

   36 expression: expression . '+' expression
   46 retstmt: RETURN expression . ';'
   55 boolexpr: expression . '<' expression
   56         | expression . EVAL expression
   57         | expression . NEQ expression

    EVAL  shift, and go to state 50
    NEQ   shift, and go to state 51
    '+'   shift, and go to state 52
    ';'   shift, and go to state 115
    '<'   shift, and go to state 54


State 110

   27 fundecl: FUNC IDENTIFIER '(' ')' '{' funbody '}' .

    $default  reduce using rule 27 (fundecl)


State 111

    9 funbody: statements retstmt .

    $default  reduce using rule 9 (funbody)


State 112

   28 fundecl: FUNC IDENTIFIER '(' paramdecl_list ')' '{' funbody . '}'

    '}'  shift, and go to state 116


State 113

   20 ifcomponent: IF '(' boolexpr ')' '{' statements '}' .

    $default  reduce using rule 20 (ifcomponent)


State 114

   12 statements: statements . statement
   23 elseifcomponent: ELSEIF '(' boolexpr ')' '{' statements . '}'

    INTEGER     shift, and go to state 1
    IDENTIFIER  shift, and go to state 2
    STRING      shift, and go to state 3
    BOOLEAN     shift, and go to state 4
    PRINT       shift, and go to state 5
    VAR         shift, and go to state 6
    IF          shift, and go to state 8
    NOT         shift, and go to state 9
    '-'         shift, and go to state 10
    '('         shift, and go to state 11
    '}'         shift, and go to state 117

    statement    go to state 100
    selection    go to state 18
    ifcomponent  go to state 19
    expression   go to state 22
    funcall      go to state 23
    vardecl      go to state 24
    assignexpr   go to state 25
    ioexpr       go to state 26
    boolexpr     go to state 27
    strexpr      go to state 28
    intexpr      go to state 29


State 115

   46 retstmt: RETURN expression ';' .

    $default  reduce using rule 46 (retstmt)


State 116

   28 fundecl: FUNC IDENTIFIER '(' paramdecl_list ')' '{' funbody '}' .

    $default  reduce using rule 28 (fundecl)


State 117

   23 elseifcomponent: ELSEIF '(' boolexpr ')' '{' statements '}' .

    $default  reduce using rule 23 (elseifcomponent)
