Terminals unused in grammar

   REAL
   IDENTIFIER
   STRING
   BOOLEAN
   PRINT
   VAR
   MOD
   '='
   '/'
   '^'


Grammar

    0 $accept: script $end

    1 script: statement

    2 statement: statement expression
    3          | expression

    4 expression: intexpr ';'

    5 intexpr: INTEGER
    6        | '-' intexpr
    7        | intexpr '+' intexpr
    8        | intexpr '*' intexpr


Terminals, with rules where they appear

$end (0) 0
'*' (42) 8
'+' (43) 7
'-' (45) 6
'/' (47)
';' (59) 4
'=' (61)
'^' (94)
error (256)
INTEGER (258) 5
REAL (259)
IDENTIFIER (260)
STRING (261)
BOOLEAN (262)
PRINT (263)
VAR (264)
MOD (265)


Nonterminals, with rules where they appear

$accept (18)
    on left: 0
script (19)
    on left: 1, on right: 0
statement (20)
    on left: 2 3, on right: 1 2
expression (21)
    on left: 4, on right: 2 3
intexpr (22)
    on left: 5 6 7 8, on right: 4 6 7 8


State 0

    0 $accept: . script $end

    INTEGER  shift, and go to state 1
    '-'      shift, and go to state 2

    script      go to state 3
    statement   go to state 4
    expression  go to state 5
    intexpr     go to state 6


State 1

    5 intexpr: INTEGER .

    $default  reduce using rule 5 (intexpr)


State 2

    6 intexpr: '-' . intexpr

    INTEGER  shift, and go to state 1
    '-'      shift, and go to state 2

    intexpr  go to state 7


State 3

    0 $accept: script . $end

    $end  shift, and go to state 8


State 4

    1 script: statement .
    2 statement: statement . expression

    INTEGER  shift, and go to state 1
    '-'      shift, and go to state 2

    $default  reduce using rule 1 (script)

    expression  go to state 9
    intexpr     go to state 6


State 5

    3 statement: expression .

    $default  reduce using rule 3 (statement)


State 6

    4 expression: intexpr . ';'
    7 intexpr: intexpr . '+' intexpr
    8        | intexpr . '*' intexpr

    '+'  shift, and go to state 10
    '*'  shift, and go to state 11
    ';'  shift, and go to state 12


State 7

    6 intexpr: '-' intexpr .
    7        | intexpr . '+' intexpr
    8        | intexpr . '*' intexpr

    $default  reduce using rule 6 (intexpr)


State 8

    0 $accept: script $end .

    $default  accept


State 9

    2 statement: statement expression .

    $default  reduce using rule 2 (statement)


State 10

    7 intexpr: intexpr '+' . intexpr

    INTEGER  shift, and go to state 1
    '-'      shift, and go to state 2

    intexpr  go to state 13


State 11

    8 intexpr: intexpr '*' . intexpr

    INTEGER  shift, and go to state 1
    '-'      shift, and go to state 2

    intexpr  go to state 14


State 12

    4 expression: intexpr ';' .

    $default  reduce using rule 4 (expression)


State 13

    7 intexpr: intexpr . '+' intexpr
    7        | intexpr '+' intexpr .
    8        | intexpr . '*' intexpr

    '*'  shift, and go to state 11

    $default  reduce using rule 7 (intexpr)


State 14

    7 intexpr: intexpr . '+' intexpr
    8        | intexpr . '*' intexpr
    8        | intexpr '*' intexpr .

    $default  reduce using rule 8 (intexpr)
