Terminals unused in grammar

   '-'
   '*'
   '/'
   UMINUS


State 1 conflicts: 2 shift/reduce
State 4 conflicts: 6 shift/reduce
State 7 conflicts: 1 shift/reduce
State 9 conflicts: 1 shift/reduce, 9 reduce/reduce
State 30 conflicts: 1 shift/reduce, 10 reduce/reduce


Grammar

    0 $accept: script $end

    1 script: script statements
    2       | script vardecl
    3       | %empty

    4 statements: %empty
    5           | statements statement
    6           | statements expression

    7 statement: PRINT '(' expression ')'

    8 vardecl: VAR IDENTIFIER ';'

    9 statement: IDENTIFIER '=' expression

   10 expression: strexpr
   11           | intexpr
   12           | floatexpr
   13           | boolexpr

   14 strexpr: STRING
   15        | IDENTIFIER
   16        | STRING '+' strexpr
   17        | IDENTIFIER '+' strexpr

   18 intexpr: INTEGER '+' intexpr
   19        | intexpr '+' intexpr
   20        | INTEGER
   21        | IDENTIFIER
   22        | intexpr MOD intexpr

   23 floatexpr: REAL
   24          | IDENTIFIER
   25          | floatexpr '+' floatexpr

   26 boolexpr: BOOLEAN


Terminals, with rules where they appear

$end (0) 0
'(' (40) 7
')' (41) 7
'*' (42)
'+' (43) 16 17 18 19 25
'-' (45)
'/' (47)
';' (59) 8
'=' (61) 9
error (256)
INTEGER (258) 18 20
REAL (259) 23
IDENTIFIER (260) 8 9 15 17 21 24
STRING (261) 14 16
BOOLEAN (262) 26
PRINT (263) 7
VAR (264) 8
MOD (265) 22
UMINUS (266)


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
script (21)
    on left: 1 2 3, on right: 0 1 2
statements (22)
    on left: 4 5 6, on right: 1 5 6
statement (23)
    on left: 7 9, on right: 5
vardecl (24)
    on left: 8, on right: 2
expression (25)
    on left: 10 11 12 13, on right: 6 7 9
strexpr (26)
    on left: 14 15 16 17, on right: 10 16 17
intexpr (27)
    on left: 18 19 20 21 22, on right: 11 18 19 22
floatexpr (28)
    on left: 23 24 25, on right: 12 25
boolexpr (29)
    on left: 26, on right: 13


State 0

    0 $accept: . script $end

    $default  reduce using rule 3 (script)

    script  go to state 1


State 1

    0 $accept: script . $end
    1 script: script . statements
    2       | script . vardecl

    $end  shift, and go to state 2
    VAR   shift, and go to state 3

    $end      [reduce using rule 4 (statements)]
    VAR       [reduce using rule 4 (statements)]
    $default  reduce using rule 4 (statements)

    statements  go to state 4
    vardecl     go to state 5


State 2

    0 $accept: script $end .

    $default  accept


State 3

    8 vardecl: VAR . IDENTIFIER ';'

    IDENTIFIER  shift, and go to state 6


State 4

    1 script: script statements .
    5 statements: statements . statement
    6           | statements . expression

    INTEGER     shift, and go to state 7
    REAL        shift, and go to state 8
    IDENTIFIER  shift, and go to state 9
    STRING      shift, and go to state 10
    BOOLEAN     shift, and go to state 11
    PRINT       shift, and go to state 12

    INTEGER     [reduce using rule 1 (script)]
    REAL        [reduce using rule 1 (script)]
    IDENTIFIER  [reduce using rule 1 (script)]
    STRING      [reduce using rule 1 (script)]
    BOOLEAN     [reduce using rule 1 (script)]
    PRINT       [reduce using rule 1 (script)]
    $default    reduce using rule 1 (script)

    statement   go to state 13
    expression  go to state 14
    strexpr     go to state 15
    intexpr     go to state 16
    floatexpr   go to state 17
    boolexpr    go to state 18


State 5

    2 script: script vardecl .

    $default  reduce using rule 2 (script)


State 6

    8 vardecl: VAR IDENTIFIER . ';'

    ';'  shift, and go to state 19


State 7

   18 intexpr: INTEGER . '+' intexpr
   20        | INTEGER .

    '+'  shift, and go to state 20

    '+'       [reduce using rule 20 (intexpr)]
    $default  reduce using rule 20 (intexpr)


State 8

   23 floatexpr: REAL .

    $default  reduce using rule 23 (floatexpr)


State 9

    9 statement: IDENTIFIER . '=' expression
   15 strexpr: IDENTIFIER .
   17        | IDENTIFIER . '+' strexpr
   21 intexpr: IDENTIFIER .
   24 floatexpr: IDENTIFIER .

    '='  shift, and go to state 21
    '+'  shift, and go to state 22

    $end        reduce using rule 15 (strexpr)
    $end        [reduce using rule 21 (intexpr)]
    $end        [reduce using rule 24 (floatexpr)]
    INTEGER     reduce using rule 15 (strexpr)
    INTEGER     [reduce using rule 21 (intexpr)]
    INTEGER     [reduce using rule 24 (floatexpr)]
    REAL        reduce using rule 15 (strexpr)
    REAL        [reduce using rule 21 (intexpr)]
    REAL        [reduce using rule 24 (floatexpr)]
    IDENTIFIER  reduce using rule 15 (strexpr)
    IDENTIFIER  [reduce using rule 21 (intexpr)]
    IDENTIFIER  [reduce using rule 24 (floatexpr)]
    STRING      reduce using rule 15 (strexpr)
    STRING      [reduce using rule 21 (intexpr)]
    STRING      [reduce using rule 24 (floatexpr)]
    BOOLEAN     reduce using rule 15 (strexpr)
    BOOLEAN     [reduce using rule 21 (intexpr)]
    BOOLEAN     [reduce using rule 24 (floatexpr)]
    PRINT       reduce using rule 15 (strexpr)
    PRINT       [reduce using rule 21 (intexpr)]
    PRINT       [reduce using rule 24 (floatexpr)]
    VAR         reduce using rule 15 (strexpr)
    VAR         [reduce using rule 21 (intexpr)]
    VAR         [reduce using rule 24 (floatexpr)]
    MOD         reduce using rule 21 (intexpr)
    '+'         [reduce using rule 21 (intexpr)]
    '+'         [reduce using rule 24 (floatexpr)]
    $default    reduce using rule 15 (strexpr)


State 10

   14 strexpr: STRING .
   16        | STRING . '+' strexpr

    '+'  shift, and go to state 23

    $default  reduce using rule 14 (strexpr)


State 11

   26 boolexpr: BOOLEAN .

    $default  reduce using rule 26 (boolexpr)


State 12

    7 statement: PRINT . '(' expression ')'

    '('  shift, and go to state 24


State 13

    5 statements: statements statement .

    $default  reduce using rule 5 (statements)


State 14

    6 statements: statements expression .

    $default  reduce using rule 6 (statements)


State 15

   10 expression: strexpr .

    $default  reduce using rule 10 (expression)


State 16

   11 expression: intexpr .
   19 intexpr: intexpr . '+' intexpr
   22        | intexpr . MOD intexpr

    MOD  shift, and go to state 25
    '+'  shift, and go to state 26

    $default  reduce using rule 11 (expression)


State 17

   12 expression: floatexpr .
   25 floatexpr: floatexpr . '+' floatexpr

    '+'  shift, and go to state 27

    $default  reduce using rule 12 (expression)


State 18

   13 expression: boolexpr .

    $default  reduce using rule 13 (expression)


State 19

    8 vardecl: VAR IDENTIFIER ';' .

    $default  reduce using rule 8 (vardecl)


State 20

   18 intexpr: INTEGER '+' . intexpr

    INTEGER     shift, and go to state 7
    IDENTIFIER  shift, and go to state 28

    intexpr  go to state 29


State 21

    9 statement: IDENTIFIER '=' . expression

    INTEGER     shift, and go to state 7
    REAL        shift, and go to state 8
    IDENTIFIER  shift, and go to state 30
    STRING      shift, and go to state 10
    BOOLEAN     shift, and go to state 11

    expression  go to state 31
    strexpr     go to state 15
    intexpr     go to state 16
    floatexpr   go to state 17
    boolexpr    go to state 18


State 22

   17 strexpr: IDENTIFIER '+' . strexpr

    IDENTIFIER  shift, and go to state 32
    STRING      shift, and go to state 10

    strexpr  go to state 33


State 23

   16 strexpr: STRING '+' . strexpr

    IDENTIFIER  shift, and go to state 32
    STRING      shift, and go to state 10

    strexpr  go to state 34


State 24

    7 statement: PRINT '(' . expression ')'

    INTEGER     shift, and go to state 7
    REAL        shift, and go to state 8
    IDENTIFIER  shift, and go to state 30
    STRING      shift, and go to state 10
    BOOLEAN     shift, and go to state 11

    expression  go to state 35
    strexpr     go to state 15
    intexpr     go to state 16
    floatexpr   go to state 17
    boolexpr    go to state 18


State 25

   22 intexpr: intexpr MOD . intexpr

    INTEGER     shift, and go to state 7
    IDENTIFIER  shift, and go to state 28

    intexpr  go to state 36


State 26

   19 intexpr: intexpr '+' . intexpr

    INTEGER     shift, and go to state 7
    IDENTIFIER  shift, and go to state 28

    intexpr  go to state 37


State 27

   25 floatexpr: floatexpr '+' . floatexpr

    REAL        shift, and go to state 8
    IDENTIFIER  shift, and go to state 38

    floatexpr  go to state 39


State 28

   21 intexpr: IDENTIFIER .

    $default  reduce using rule 21 (intexpr)


State 29

   18 intexpr: INTEGER '+' intexpr .
   19        | intexpr . '+' intexpr
   22        | intexpr . MOD intexpr

    MOD  shift, and go to state 25

    $default  reduce using rule 18 (intexpr)


State 30

   15 strexpr: IDENTIFIER .
   17        | IDENTIFIER . '+' strexpr
   21 intexpr: IDENTIFIER .
   24 floatexpr: IDENTIFIER .

    '+'  shift, and go to state 22

    $end        reduce using rule 15 (strexpr)
    $end        [reduce using rule 21 (intexpr)]
    $end        [reduce using rule 24 (floatexpr)]
    INTEGER     reduce using rule 15 (strexpr)
    INTEGER     [reduce using rule 21 (intexpr)]
    INTEGER     [reduce using rule 24 (floatexpr)]
    REAL        reduce using rule 15 (strexpr)
    REAL        [reduce using rule 21 (intexpr)]
    REAL        [reduce using rule 24 (floatexpr)]
    IDENTIFIER  reduce using rule 15 (strexpr)
    IDENTIFIER  [reduce using rule 21 (intexpr)]
    IDENTIFIER  [reduce using rule 24 (floatexpr)]
    STRING      reduce using rule 15 (strexpr)
    STRING      [reduce using rule 21 (intexpr)]
    STRING      [reduce using rule 24 (floatexpr)]
    BOOLEAN     reduce using rule 15 (strexpr)
    BOOLEAN     [reduce using rule 21 (intexpr)]
    BOOLEAN     [reduce using rule 24 (floatexpr)]
    PRINT       reduce using rule 15 (strexpr)
    PRINT       [reduce using rule 21 (intexpr)]
    PRINT       [reduce using rule 24 (floatexpr)]
    VAR         reduce using rule 15 (strexpr)
    VAR         [reduce using rule 21 (intexpr)]
    VAR         [reduce using rule 24 (floatexpr)]
    MOD         reduce using rule 21 (intexpr)
    '+'         [reduce using rule 21 (intexpr)]
    '+'         [reduce using rule 24 (floatexpr)]
    ')'         reduce using rule 15 (strexpr)
    ')'         [reduce using rule 21 (intexpr)]
    ')'         [reduce using rule 24 (floatexpr)]
    $default    reduce using rule 15 (strexpr)


State 31

    9 statement: IDENTIFIER '=' expression .

    $default  reduce using rule 9 (statement)


State 32

   15 strexpr: IDENTIFIER .
   17        | IDENTIFIER . '+' strexpr

    '+'  shift, and go to state 22

    $default  reduce using rule 15 (strexpr)


State 33

   17 strexpr: IDENTIFIER '+' strexpr .

    $default  reduce using rule 17 (strexpr)


State 34

   16 strexpr: STRING '+' strexpr .

    $default  reduce using rule 16 (strexpr)


State 35

    7 statement: PRINT '(' expression . ')'

    ')'  shift, and go to state 40


State 36

   19 intexpr: intexpr . '+' intexpr
   22        | intexpr . MOD intexpr
   22        | intexpr MOD intexpr .

    $default  reduce using rule 22 (intexpr)


State 37

   19 intexpr: intexpr . '+' intexpr
   19        | intexpr '+' intexpr .
   22        | intexpr . MOD intexpr

    MOD  shift, and go to state 25

    $default  reduce using rule 19 (intexpr)


State 38

   24 floatexpr: IDENTIFIER .

    $default  reduce using rule 24 (floatexpr)


State 39

   25 floatexpr: floatexpr . '+' floatexpr
   25          | floatexpr '+' floatexpr .

    $default  reduce using rule 25 (floatexpr)


State 40

    7 statement: PRINT '(' expression ')' .

    $default  reduce using rule 7 (statement)
